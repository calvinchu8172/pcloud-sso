- content_for :title, I18n.t('titles.sign_up')

- content_for :precontent do
  / .process_indicator_wrapper
  /   %svg.process_indicator
  /     %circle.circle1.apply_theme
  /     %line.apply_gray{:x1 => 28, :y1 => 15, :x2 => 38, :y2 => 15}
  /     %circle.circle2.apply_gray
  /     %line.apply_gray{:x1 => 62, :y1 => 15, :x2 => 72, :y2 => 15}
  /     %circle.circle3.apply_gray

.content_wrapper.normal
  = simple_form_for resource, as: resource_name, url: registration_url(resource_name), method: :post do |f|
    = f.input :email, label: I18n.t("user.labels.email"), wrapper_html: { class: 'has-feedback' } do
      = f.input_field :email, placeholder: I18n.t('user.labels.email_suggestion'), autofocus: true, class: 'form-control', required: true
      = content_tag 'span', image_tag("email-gray.png"), class: 'form-control-feedback'
    = f.input :password, label: I18n.t("user.labels.create_password"), wrapper_html: { class: 'has-feedback'} do
      = f.input_field :password, placeholder: I18n.t("user.labels.password_suggestion"), class: 'form-control add-padding-right', required: true, maxlength:14
      = content_tag 'span', class: 'form-control-feedback password-meter-wrapper' do
        .password-meter-anchor
    .show-password-wrapper
    / 這是原本的 password meter 的顯示方式，若要看可以解除註解
    / %div#password_meter

    / 這是原本輸入 password confirmation，因為客戶只要單次輸入 password，若要看可以解除註解
    / = f.input :password_confirmation, label: I18n.t("user.labels.password_confirmation"), wrapper_html: { class: 'has-feedback' } do
    /   = f.input_field :password_confirmation, placeholder: I18n.t('user.labels.password'), class: 'form-control', required: true, maxlength:14
    /   = content_tag 'span', image_tag("key-gray.png"), class: 'form-control-feedback'
    / .show_password.btn.btn-custom.btn-block
    /   %p= fa_icon('eye') + '  Show password'

    .recaptcha
      .row
        / .col-xs-12.col-md-12
        /   .span.control-label= I18n.t("user.labels.captcha")
        .col-xs-12.col-md-12
          = recaptcha_tags ajax: true, hl: locale
          - if flash[:error]
            .error
              %label.zyxel_arlert_area
                .error_message= flash[:error]

    .terms_and_edm
      = f.input :agreement, label: (I18n.t('user.labels.terms.instruction') + "<br>" + link_to(I18n.t("user.labels.terms.instruction_2"), '#', data: { toggle: 'modal', target: '#user_agreement_dialog' })).html_safe, as: :boolean, boolean_style: :inline, wrapper_html: { class: 'checkbox-custom' }
      = f.input :edm_accept, label: (I18n.t("user.labels.edm_1") + "<br>" + I18n.t("user.labels.edm_2")).html_safe, as: :boolean, boolean_style: :inline, wrapper_html: { class: 'checkbox-custom' }

    = f.button :submit, I18n.t('labels.sign_up'), class: 'btn-custom btn-block'

  .btn-cancel
    = link_to I18n.t('labels.cancel'), new_session_url(resource_name), class: 'btn-cancel'

  = render "hint/sign_on_agreement_terms"
